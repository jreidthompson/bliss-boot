#!/usr/bin/env python3

# Copyright 2014-2015 Jonathan Vasquez <jvasquez1011@gmail.com>
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

from libs.Tools import Tools
from libs.Manager import Manager
from libs.Scanner import Scanner

import libs.ConfigLoader as ConfigLoader

config = ConfigLoader.GetConfigModule()

# Initialize Scanner
scanner = Scanner()

# Sets up the Manager ;) (This is what is going to write our file)
manager = Manager()

class Main(object):
    @classmethod
    def start(cls):
         # Print the header information
        Tools.PrintHeader()

        # Gets parameters
        Tools.ProcessArguments()

         # Find all the kernels in the user's boot directory (config.bootdir)
        Scanner.FindBootKernels()

        # Find all the kernels that the user configured in their configuration file
        Scanner.FindKernelsInConfig()

        # Find all the kernels that were found in their boot directory and where a definition was found in their configuration file
        Scanner.FindCommonKernels()

        # Checks to see that at least one kernel entry will be written
        result = Scanner.AnyKernelsExist()

        if result == -1:
            Tools.Fail("Please add your desired kernels and their options to the 'kernels' list in " +
            ConfigLoader.GetConfigFilePath() + ".\n" + "These entries should match the kernels you have in " +
            config.kernelDirectory + ".")

        if not Tools.OnlyInstallBootloader():
            Manager.WriteEntries()

        Manager.InstallBootloader()

if __name__ == "__main__":
    Main.start()
