#!/usr/bin/env python3

# Copyright (C) 2014-2018 Jonathan Vasquez <jon@xyinn.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see<https://www.gnu.org/licenses/>.

from libs.Tools import Tools
from libs.Manager import Manager
from libs.Scanner import Scanner

import libs.ConfigLoader as ConfigLoader

config = ConfigLoader.GetConfigModule()

# Initialize Scanner
scanner = Scanner()

# Sets up the Manager ;) (This is what is going to write our file)
manager = Manager()

class Main(object):
    @classmethod
    def start(cls):
         # Print the header information
        Tools.PrintHeader()

        # Gets parameters
        Tools.ProcessArguments()

         # Find all the kernels in the user's boot directory (config.bootdir)
        Scanner.FindBootKernels()

        # Find all the kernels that the user configured in their configuration file
        Scanner.FindKernelsInConfig()

        # Find all the kernels that were found in their boot directory and where a definition was found in their configuration file
        Scanner.FindCommonKernels()

        # Checks to see that at least one kernel entry will be written
        result = Scanner.AnyKernelsExist()

        if result == -1:
            Tools.Fail("Please add your desired kernels and their options to the 'kernels' list in " +
            ConfigLoader.GetConfigFilePath() + ".\n" + "These entries should match the kernels you have in " +
            config.kernelDirectory + ".")

        Manager.WriteEntries()


if __name__ == "__main__":
    Main.start()
