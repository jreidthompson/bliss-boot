#!/usr/bin/env python3

# Copyright 2014-2017 Jonathan Vasquez <jon@xyinn.org>
# 
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

from libs.Tools import Tools
from libs.Manager import Manager
from libs.Scanner import Scanner

import libs.ConfigLoader as ConfigLoader

config = ConfigLoader.GetConfigModule()

# Initialize Scanner
scanner = Scanner()

# Sets up the Manager ;) (This is what is going to write our file)
manager = Manager()

class Main(object):
    @classmethod
    def start(cls):
         # Print the header information
        Tools.PrintHeader()

        # Gets parameters
        Tools.ProcessArguments()

         # Find all the kernels in the user's boot directory (config.bootdir)
        Scanner.FindBootKernels()

        # Find all the kernels that the user configured in their configuration file
        Scanner.FindKernelsInConfig()

        # Find all the kernels that were found in their boot directory and where a definition was found in their configuration file
        Scanner.FindCommonKernels()

        # Checks to see that at least one kernel entry will be written
        result = Scanner.AnyKernelsExist()

        if result == -1:
            Tools.Fail("Please add your desired kernels and their options to the 'kernels' list in " +
            ConfigLoader.GetConfigFilePath() + ".\n" + "These entries should match the kernels you have in " +
            config.kernelDirectory + ".")

        Manager.WriteEntries()


if __name__ == "__main__":
    Main.start()
